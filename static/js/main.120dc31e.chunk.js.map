{"version":3,"sources":["components/Login/index.js","components/Header/index.js","components/Home/index.js","components/UserProfile/index.js","components/JobCard/index.js","components/AllJobsSection/index.js","components/Jobs/index.js","components/SimilarJobItem/index.js","components/JobItemDetails/index.js","components/NotFound/index.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["Login","state","username","password","showSubmitError","errorMsg","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","path","replace","onSubmitFailure","submitForm","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","renderPasswordField","className","htmlFor","type","id","placeholder","onChange","renderUsernameField","this","undefined","get","to","onSubmit","src","alt","Component","withRouter","onClickLogout","remove","onClick","Home","apiStatusConstants","UserProfile","userProfileDetails","apiStatus","getProfileData","headers","Authorization","fetchData","profileDetails","profile_details","updatedData","name","profileImageUrl","profile_image_url","shortBio","short_bio","renderProfileView","onProfileRetry","renderFailureView","renderLoaderView","color","height","width","renderUserData","JobCard","jobData","title","companyLogoUrl","employmentType","jobDescription","packagePerAnnum","location","rating","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","AllJobsSection","jobsList","searchInput","salaryRange","getJobs","apiUrl","join","jobs","map","job","company_logo_url","employment_type","job_description","package_per_annum","onChangeSearchInput","renderSearch","renderJobsListView","length","renderLoadingView","renderAllJobs","renderEmploymentTypeFilter","item","each","selected","checked","push","filter","itemId","includes","renderSalaryRangeFilter","Jobs","SimilarJobItem","similarJobs","JobItemDetails","similarJobsData","getFormattedData","companyWebsiteUrl","company_website_url","lifeAtCompany","description","life_at_company","imageUrl","image_url","skills","eachSkill","getJobItem","match","params","console","log","job_details","updatedSkillData","similar_jobs","eachSimilarJob","renderJobDetailsView","href","renderJobViews","eachItem","NotFound","ProtectedRoute","Cookie","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.120dc31e.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label className=\"input_label\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"input_field\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={this.onChangePassword}\n        />\n      </>\n    )\n  }\n\n  renderUsernameField = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label className=\"input_label\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"input_field\"\n          value={username}\n          placeholder=\"Username\"\n          onChange={this.onChangeUsername}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login_container\">\n        <form className=\"form_container\" onSubmit={this.submitForm}>\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            className=\"website_logo\"\n            alt=\"website logo\"\n          />\n          <div className=\"input_container\">{this.renderUsernameField()}</div>\n          <div className=\"input_container\">{this.renderPasswordField()}</div>\n          <button type=\"submit\" className=\"login_button\">\n            Login\n          </button>\n          {showSubmitError && <p className=\"error_message\">*{errorMsg}</p>}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import Cookies from 'js-cookie'\nimport {Link, withRouter} from 'react-router-dom'\nimport {AiFillHome} from 'react-icons/ai'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n  return (\n    <div className=\"nav_header\">\n      <div className=\"nav_content\">\n        <div className=\"navBar_mobile\">\n          <Link to=\"/\">\n            <img\n              className=\"website_logo\"\n              src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n              alt=\"website logo\"\n            />\n          </Link>\n          <ul className=\"nav_menu\">\n            <li className=\"nav_menu_list_item\">\n              <Link to=\"/\">\n                <AiFillHome className=\"nav_menu_icon\" />\n              </Link>\n            </li>\n            <li className=\"nav_menu_list_item\">\n              <Link to=\"/jobs\">\n                <BsFillBriefcaseFill className=\"nav_menu_icon\" />\n              </Link>\n            </li>\n            <button\n              className=\"logout_mobile_btn\"\n              type=\"button\"\n              onClick={onClickLogout}\n            >\n              <FiLogOut className=\"nav_menu_icon\" />\n            </button>\n          </ul>\n        </div>\n        <div className=\"navBar_desktop\">\n          <Link to=\"/\">\n            <img\n              className=\"website_logo\"\n              src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n              alt=\"website logo\"\n            />\n          </Link>\n          <ul className=\"nav_menu\">\n            <li className=\"nav_menu_list_item\">\n              <Link to=\"/\" className=\"nav_menu_desktop_link\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav_menu_list_item\">\n              <Link to=\"/jobs\" className=\"nav_menu_desktop_link\">\n                Jobs\n              </Link>\n            </li>\n          </ul>\n          <button\n            className=\"logout_desktop_button\"\n            type=\"button\"\n            onClick={onClickLogout}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\nimport Header from '../Header'\nimport './index.css'\n\nconst Home = () => (\n  <>\n    <Header />\n    <div className=\"home_container\">\n      <div className=\"home_content\">\n        <h1 className=\"home_heading\">Find The Job That Fits Your Life</h1>\n        <p className=\"home_description\">\n          Millions of people are searching for jobs, salary information, company\n          reviews. Find the job that fits your abilities and potential.\n        </p>\n        <Link to=\"/jobs\">\n          <button className=\"findJobs_btn\" type=\"button\">\n            Find Jobs\n          </button>\n        </Link>\n      </div>\n    </div>\n  </>\n)\n\nexport default Home\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\nimport Loader from 'react-loader-spinner'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'INPROGRESS',\n}\n\nclass UserProfile extends Component {\n  state = {\n    userProfileDetails: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getProfileData()\n  }\n\n  getProfileData = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/profile'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const fetchData = await response.json()\n      const profileDetails = fetchData.profile_details\n      const updatedData = {\n        name: profileDetails.name,\n        profileImageUrl: profileDetails.profile_image_url,\n        shortBio: profileDetails.short_bio,\n      }\n      this.setState({\n        userProfileDetails: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderProfileView = () => {\n    const {userProfileDetails} = this.state\n    const {name, profileImageUrl, shortBio} = userProfileDetails\n    return (\n      <div className=\"profile_card\">\n        <div className=\"profile_image_container\">\n          <img className=\"profile_image\" src={profileImageUrl} alt=\"profile\" />\n        </div>\n        <h1 className=\"profile_heading\">{name}</h1>\n        <p className=\"profile_description\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  onProfileRetry = () => {\n    this.getProfileData()\n  }\n\n  renderFailureView = () => (\n    <div className=\"profile_failure\">\n      <button\n        className=\"profileRetry_btn\"\n        type=\"button\"\n        onClick={this.onProfileRetry}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoaderView = () => (\n    <div className=\"loaderView_container\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height={50} width={50} />\n    </div>\n  )\n\n  renderUserData = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderProfileView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <>{this.renderUserData()}</>\n  }\n}\n\nexport default UserProfile\n","import {Link} from 'react-router-dom'\nimport {AiFillStar} from 'react-icons/ai'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobData} = props\n  const {\n    id,\n    title,\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    packagePerAnnum,\n    location,\n    rating,\n  } = jobData\n\n  return (\n    <li className=\"job_item\">\n      <Link to={`/jobs/${id}`} className=\"link\">\n        <div className=\"jobCard_container\">\n          <div className=\"companyDetails_container\">\n            <img\n              className=\"company_Logo\"\n              src={companyLogoUrl}\n              alt=\"company Logo\"\n            />\n            <div className=\"jobTitle_rating_container\">\n              <h1 className=\"jobTitle\">{title}</h1>\n              <div className=\"rating_container\">\n                <AiFillStar className=\"rating_icons\" />\n                <p className=\"rating_text\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"location_empType_package_container\">\n            <div className=\"location_empType\">\n              <div className=\"location\">\n                <MdLocationOn className=\"job_icons\" />\n                <p className=\"job_icons_text\">{location}</p>\n              </div>\n              <div className=\"empType\">\n                <BsBriefcaseFill className=\"job_icons\" />\n                <p className=\"job_icons_text\">{employmentType}</p>\n              </div>\n            </div>\n            <div className=\"package\">\n              <p className=\"package_text\">{packagePerAnnum}</p>\n            </div>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"description_container\">\n            <h1 className=\"description_heading\">Description</h1>\n            <p className=\"description_text\">{jobDescription}</p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport {BsSearch} from 'react-icons/bs'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nimport UserProfile from '../UserProfile'\nimport JobCard from '../JobCard'\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'INPROGRESS',\n}\n\nclass AllJobsSection extends Component {\n  state = {\n    jobsList: [],\n    apiStatus: apiStatusConstants.initial,\n    searchInput: '',\n    salaryRange: 0,\n    employmentType: [],\n  }\n\n  componentDidMount() {\n    this.getJobs()\n  }\n\n  getJobs = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const {searchInput, salaryRange, employmentType} = this.state\n    const apiUrl = `https://apis.ccbp.in/jobs?employment_type=${employmentType.join()}&minimum_package=${salaryRange}&search=${searchInput}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok === true) {\n      const fetchData = await response.json()\n      const updatedData = fetchData.jobs.map(job => ({\n        companyLogoUrl: job.company_logo_url,\n        employmentType: job.employment_type,\n        id: job.id,\n        title: job.title,\n        jobDescription: job.job_description,\n        packagePerAnnum: job.package_per_annum,\n        location: job.location,\n        rating: job.rating,\n      }))\n      this.setState({\n        jobsList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  onChangeSearchInput = event => {\n    this.setState({searchInput: event.target.value}, () => {\n      this.getJobs()\n    })\n  }\n\n  renderSearch = () => {\n    const {searchInput} = this.state\n    return (\n      <div className=\"search_container\">\n        <input\n          className=\"input_field\"\n          type=\"search\"\n          value={searchInput}\n          placeholder=\"Search\"\n          onChange={this.onChangeSearchInput}\n        />\n        <button\n          className=\"search_icon_container\"\n          type=\"button\"\n          data-testid=\"searchButton\"\n        >\n          <BsSearch className=\"search_icon\" />\n        </button>\n      </div>\n    )\n  }\n\n  renderJobsListView = () => {\n    const {jobsList} = this.state\n    const shouldShowJobsList = jobsList.length > 0\n    return shouldShowJobsList ? (\n      <div className=\"JobsView_container\">\n        <ul className=\"jobs_list\">\n          {jobsList.map(job => (\n            <JobCard jobData={job} key={job.id} />\n          ))}\n        </ul>\n      </div>\n    ) : (\n      <div className=\"noJobs_data\">\n        <img\n          className=\"no_jobs_image\"\n          src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n          alt=\"no jobs\"\n        />\n        <h1 className=\"noJob_heading\">No Jobs Found</h1>\n        <p className=\"noJob_description\">\n          We could not find any jobs. Try other filters\n        </p>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureView_container\">\n      <img\n        className=\"failure_image\"\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1 className=\"failureView_heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failureView_description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"loaderView_container\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height={50} width={50} />\n    </div>\n  )\n\n  renderAllJobs = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderJobsListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  renderEmploymentTypeFilter = () => {\n    const {employmentType} = this.state\n    return (\n      <div className=\"filter_container\">\n        <h1 className=\"filter_heading\">Employment Types</h1>\n        <ul>\n          {employmentTypesList.map(item => (\n            <li className=\"filter_list_item\" key={item.employmentTypeId}>\n              <input\n                type=\"checkbox\"\n                key=\"label\"\n                value={item.employmentTypeId}\n                onChange={each => {\n                  let selected = [...employmentType]\n                  if (each.target.checked) {\n                    selected.push(item.employmentTypeId)\n                  } else {\n                    selected = selected.filter(\n                      itemId => itemId !== item.employmentTypeId,\n                    )\n                  }\n                  this.setState({employmentType: selected}, this.getJobs)\n                }}\n                checked={employmentType.includes(item.employmentTypeId)}\n              />\n              <label\n                key={item.employmentTypeId}\n                className=\"filter_label\"\n                htmlFor={item.employmentTypeId}\n              >\n                {item.label}\n              </label>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderSalaryRangeFilter = () => {\n    const {salaryRange} = this.state\n    return (\n      <div className=\"filter_container\">\n        <h1 className=\"filter_heading\">Salary Ranges</h1>\n        <ul>\n          {salaryRangesList.map(item => (\n            <li className=\"filter_list_item\" key={item.salaryRangeId}>\n              <input\n                type=\"radio\"\n                key=\"label\"\n                value={item.salaryRangeId}\n                onChange={each => {\n                  this.setState({salaryRange: each.target.value}, this.getJobs)\n                }}\n                checked={salaryRange === item.salaryRangeId}\n              />\n              <label\n                key={item.salaryRangeId}\n                className=\"filter_label\"\n                htmlFor={item.salaryRangeId}\n              >\n                {item.label}\n              </label>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"all_jobs_section\">\n        <ul className=\"profileANDfilters_container\">\n          <div className=\"mobileView_search\">{this.renderSearch()}</div>\n          <UserProfile />\n          <hr className=\"line\" />\n          {this.renderEmploymentTypeFilter()}\n          <hr className=\"line\" />\n          {this.renderSalaryRangeFilter()}\n        </ul>\n        <ul className=\"desktopView\">\n          <div className=\"desktopView_search\">{this.renderSearch()}</div>\n          {this.renderAllJobs()}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default AllJobsSection\n","import Header from '../Header'\nimport AllJobsSection from '../AllJobsSection'\nimport './index.css'\n\nconst Jobs = () => (\n  <>\n    <Header />\n    <div className=\"job_section\">\n      <AllJobsSection />\n    </div>\n  </>\n)\n\nexport default Jobs\n","import {AiFillStar} from 'react-icons/ai'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobItem = props => {\n  const {similarJobs} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    title,\n    rating,\n  } = similarJobs\n  return (\n    <div className=\"similarJob_container\">\n      <div className=\"companyLogo_jobTitle_Rating\">\n        <img\n          className=\"company_Logo\"\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n        />\n        <div className=\"jobTitle_rating_container\">\n          <h1 className=\"jobTitle\">{title}</h1>\n          <div className=\"rating_container\">\n            <AiFillStar className=\"rating_icons\" />\n            <p className=\"rating_text\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description_heading\">Description</h1>\n      <p className=\"description_text\">{jobDescription}</p>\n      <div className=\"location_empType_container\">\n        <div className=\"location_empType\">\n          <div className=\"location\">\n            <MdLocationOn className=\"job_icons\" />\n            <p className=\"job_icons_text\">{location}</p>\n          </div>\n          <div className=\"empType\">\n            <BsBriefcaseFill className=\"job_icons\" />\n            <p className=\"job_icons_text\">{employmentType}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SimilarJobItem\n","import {Component} from 'react'\nimport {AiFillStar} from 'react-icons/ai'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {FiExternalLink} from 'react-icons/fi'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport SimilarJobItem from '../SimilarJobItem'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobData: {},\n    similarJobsData: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobItem()\n  }\n\n  getFormattedData = data => ({\n    companyLogoUrl: data.company_logo_url,\n    companyWebsiteUrl: data.company_website_url,\n    employmentType: data.employment_type,\n    id: data.id,\n    jobDescription: data.job_description,\n    lifeAtCompany: {\n      description: data.life_at_company.description,\n      imageUrl: data.life_at_company.image_url,\n    },\n    location: data.location,\n    rating: data.rating,\n    title: data.title,\n    packagePerAnnum: data.package_per_annum,\n    skills: data.skills.map(eachSkill => ({\n      imageUrl: eachSkill.image_url,\n      name: eachSkill.name,\n    })),\n  })\n\n  getJobItem = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    console.log(response)\n    if (response.ok === true) {\n      const fetchData = await response.json()\n      const updatedData = this.getFormattedData(fetchData.job_details)\n      const updatedSkillData = fetchData.similar_jobs.map(eachSimilarJob => ({\n        companyLogoUrl: eachSimilarJob.company_logo_url,\n        employmentType: eachSimilarJob.employment_type,\n        id: eachSimilarJob.id,\n        jobDescription: eachSimilarJob.job_description,\n        location: eachSimilarJob.location,\n        rating: eachSimilarJob.rating,\n        title: eachSimilarJob.title,\n      }))\n      this.setState({\n        jobData: updatedData,\n        similarJobsData: updatedSkillData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderJobDetailsView = () => {\n    const {jobData} = this.state\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      jobDescription,\n      location,\n      title,\n      rating,\n      packagePerAnnum,\n      lifeAtCompany,\n      skills,\n    } = jobData\n    const {description, imageUrl} = lifeAtCompany\n\n    return (\n      <div className=\"jobDetailsView_container\">\n        <div className=\"companyDetails_container\">\n          <img\n            className=\"company_Logo\"\n            src={companyLogoUrl}\n            alt=\"job details company logo\"\n          />\n          <div className=\"jobTitle_rating_container\">\n            <h1 className=\"jobTitle\">{title}</h1>\n            <div className=\"rating_container\">\n              <AiFillStar className=\"rating_icons\" />\n              <p className=\"rating_text\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"location_empType_package_container\">\n          <div className=\"location_empType\">\n            <div className=\"location\">\n              <MdLocationOn className=\"job_icons\" />\n              <p className=\"job_icons_text\">{location}</p>\n            </div>\n            <div className=\"empType\">\n              <BsBriefcaseFill className=\"job_icons\" />\n              <p className=\"job_icons_text\">{employmentType}</p>\n            </div>\n          </div>\n          <div className=\"package\">\n            <p className=\"package_text\">{packagePerAnnum}</p>\n          </div>\n        </div>\n        <hr className=\"line\" />\n        <div className=\"description_container\">\n          <div className=\"description\">\n            <h1 className=\"description_heading\">Description</h1>\n            <div className=\"visit_container\">\n              <a href={companyWebsiteUrl} className=\"visit_Link\">\n                Visit\n              </a>\n              <FiExternalLink className=\"visit_icon\" />\n            </div>\n          </div>\n          <p className=\"description_text\">{jobDescription}</p>\n        </div>\n        <h1 className=\"skills_heading\">Skills</h1>\n        <ul className=\"skills_container\">\n          {skills.map(eachSkill => (\n            <li className=\"skills\" key={eachSkill.id}>\n              <img\n                className=\"skill_image\"\n                src={eachSkill.imageUrl}\n                alt=\"skillImage\"\n              />\n              <h1 className=\"skill_name\">{eachSkill.name}</h1>\n            </li>\n          ))}\n        </ul>\n        <h1 className=\"lifeAtCompany_heading\">Life at Company</h1>\n        <div className=\"lifeAtCompany_container\">\n          <p className=\"lifeAtCompany_description\">{description}</p>\n          <img\n            className=\"lifeAtCompany_image\"\n            src={imageUrl}\n            alt=\"lifeAtCompanyImage\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureView_container\">\n      <img\n        alt=\"failure view\"\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        className=\"failureView_image\"\n      />\n      <h1 className=\"failureView_heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failureView_description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button className=\"retry_button\" type=\"button\" onClick={this.getJobItem}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"profile-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobViews = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderJobDetailsView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {similarJobsData} = this.state\n    return (\n      <div className=\"bg_container\">\n        <Header />\n        {this.renderJobViews()}\n        <div className=\"similarJobs_container\">\n          <h1 className=\"similarJob_heading\">Similar Jobs</h1>\n          <ul className=\"similar_card\">\n            {similarJobsData.map(eachItem => (\n              <SimilarJobItem key={eachItem.id} similarJobs={eachItem} />\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"notFound_container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n      alt=\"not found\"\n      className=\"notFound_image\"\n    />\n    <h1 className=\"notFound_heading\">Page Not Found</h1>\n    <p className=\"notFound_description\">\n      we're sorry, the page you requested could not be found\n    </p>\n  </div>\n)\n\nexport default NotFound\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Switch, Route, Redirect} from 'react-router-dom'\n\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport JobItemDetails from './components/JobItemDetails'\nimport NotFound from './components/NotFound'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport './App.css'\n\n// These are the lists used in the application. You can move them to any component needed.\n\n// Replace your code here\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route exact path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}